# Model Fields (with most commonly used arguments)

snippet auto
	${1:id} = models.AutoField(_('$1'))
snippet bool
	${1:active} = models.BooleanField(_('$1'), ${2:default=True})
snippet char
	${1:name} = models.CharField(_('$1'), max_length=${2:32}${3:, blank=True}${4:, null=True}${5:, default=''})
snippet comma
	${1:FIELDNAME} = models.CommaSeparatedIntegerField(_('$1'), max_length=${2:32})
snippet date
	${1:pub_date} = models.DateField(_('$1')${2:, default=datetime.now}${3:, blank=True}${4:, null=True})
snippet datetime
	${1:pub_date} = models.DateTimeField(_('$1')${2:, default=datetime.now}${3:, blank=True}${4:, null=True})
snippet time
	${1:FIELDNAME} = models.TimeField(_('$1')${2:, default=datetime.now}${3:, blank=True}${4:, null=True})
snippet decimal
	${1:FIELDNAME} = models.DecimalField(_('$1')${2:, decimal_places=2})
snippet email
	${1:email} = models.EmailField(_('$1'), max_length=${2:75}${3:, blank=True}${4:, null=True})
snippet file
	${1:file} = models.FileField(_('$1'), upload_to='${2:app/model/field}'${3:, max_length=100})
snippet image
	${1:picture} = models.ImageField(_('$1'), upload_to='${2:app/model/field}'${3:, max_length=100})
snippet filepath
	${1:FIELDNAME} = models.FilePathField(_('$1'), path='${2:/abs/path/to/dir}'${3:, max_length=100}${4:, match="*.ext"}${5:, recursive=True}${6:, blank=True}${7:, null=True})
snippet float
	${1:FIELDNAME} = models.FloatField(_('$1')${2:, blank=True}${3:, null=True})
snippet int
	${1:FIELDNAME} = models.IntegerField(_('$1')${2:, blank=True}${3:, null=True})
snippet ip
	${1:ip} = models.IPAddressField(_('$1')${2:, blank=True}${3:, null=True})
snippet nullbool
	${1:FIELDNAME} = models.NullBooleanField(_('$1')${2:, blank=True}${3:, null=True})
snippet pint
	${1:FIELDNAME} = models.PositiveIntegerField(_('$1')${2:, blank=True}${3:, null=True})
snippet psint
	${1:FIELDNAME} = models.PositiveSmallIntegerField(_('$1')${2:, blank=True}${3:, null=True})
snippet slug
	${1:slug} = models.SlugField(_('$1'), max_length=${2:32}${3:, blank=True}${4:, null=True}${5:, unique=True})
snippet sint
	${1:FIELDNAME} = models.SmallIntegerField(_('$1')${2:, blank=True}${3:, null=True})
snippet text
	${1:content} = models.TextField(_('$1')${2:, blank=True}${3:, null=True})
snippet url
	${1:url} = models.URLField(_('$1'), max_length=${2:200}${3:, blank=True}${4:, null=True})
snippet xml
	${1:source} = models.XMLField(_('$1')${2:, blank=True}${3:, null=True})
# Relational Fields
snippet fk
	${1:FIELDNAME} = models.ForeignKey(${2:OtherModel}, verbose_name=_('$1'), related_name='$1s')
snippet m2m
	${1:FIELDNAME} = models.ManyToManyField(${2:OtherModel}, verbose_name=_('$1'))
snippet o2o
	${1:FIELDNAME} = models.OneToOneField(${2:OtherModel}, verbose_name=_('$1'))
# Code Skeletons
snippet form
	class ${1:FormName}(forms.Form):
		${3}

snippet model
	class ${1:ModelName}(models.Model):
		${2:name} = models.CharField('$2', max_length=${3:32})
		slug = models.SlugField('slug', max_length=$3, unique=True)
		${4}
		class Meta:
			verbose_name = '$1'
			verbose_name_plural = '$1s'
		
		def __unicode__(self):
			return '%s' % self.$2
		
snippet model_
	class ${1:ModelName}(models.Model):
		${2:name} = models.CharField(_('$2'), max_length=${3:32})
		slug = models.SlugField(_('slug'), max_length=$3, unique=True)
		${4}
		class Meta:
			verbose_name = _('$1')
			verbose_name_plural = _('$1s')
		
		def __unicode__(self):
			return '%s' % self.$2
		
snippet modeladmin
	class ${1:ModelName}Admin(admin.ModelAdmin):
		${2}
	
	admin.site.register($1, $1Admin)
	
snippet tabularinline
	class ${1:ModelName}Inline(admin.TabularInline):
		model = $1

snippet stackedinline
	class ${1:ModelName}Inline(admin.StackedInline):
		model = $1

snippet r2r
	return render_to_response('${1:template.html}', context,
		context_instance=RequestContext(request))

snippet testcase
	class ${1:Model}Test(TestCase):
		
		fixtures = ['test.app.$1.json']

		def setUp(self):
			self.instance = $1.objects.all()[0]

		def test_xxx(self):
			self.fail('Test missing')

