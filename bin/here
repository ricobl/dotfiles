#!/bin/bash

set -euo pipefail

script=`basename $0`
editor="${EDITOR:-code}"

_error() {
  echo >&2 "$@"
}

usage() {
  output=$(cat <<OUTPUT
Run commands specific to the current directory.

Commands are stored in a central location in your home dir, uncluttering your local directory.

Usage:

  $script [cmd] [arg1] [arg2] ... [argN]

For this directory, save scripts here:

  $(_bin_dir)
OUTPUT
  )
  _error "$output"
  exit 1
}

_abort() {
  _error "Error: $@"

  exit 1
}

_serialize_pwd() {
  pwd | sed "s#$HOME#HOME#" | tr / '~'
}

_bin_dir() {
  echo "$HOME/.here/$(_serialize_pwd)"
}

show_here_dir() {
  _bin_dir
  exit 0
}

list_scripts() {
  ls "$(_bin_dir)"
}

create_script() {
  filename="$(_bin_dir)/$1"
  [[ -f "$filename" ]] && _abort "File already exists: $filename"

  content="${2-# exec ... \"\$@\" # Write your command here...}"

  template=$(cat <<OUTPUT
#!/usr/bin/env bash

$content
OUTPUT
  )

  echo "$template" > "$filename"
  chmod +x "$filename"

  $editor "$filename"
}

edit_script() {
  filename="$(_bin_dir)/$1"

  $editor "$filename"
}

run_script(){
  filename="$(_bin_dir)/$1"

  [[ -f "$filename" ]] || _abort "Script does not exist: $filename"

  exec "$(_bin_dir)/$@"
}

[[ $# -ge 1 ]] || usage

if [[ "$1" == "--"* ]]; then
  opt="$1"
  shift
  case "$opt" in
    "--list" )
        list_scripts "$@"; exit $?;;
    "--create" )
        create_script "$@"; exit $?;;
    "--edit" )
        edit_script "$@"; exit $?;;
    "--dir" )
        show_here_dir "$@"; exit $?;;
    *) _abort "Invalid option: $@";;
  esac
fi

run_script "$@"
